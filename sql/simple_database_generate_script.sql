/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.0 		*/
/*  Created On : 22-apr-2023 13:37:00 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS Showing_state CASCADE
;

DROP TABLE IF EXISTS Showing CASCADE
;

DROP TABLE IF EXISTS Session_room CASCADE
;

DROP TABLE IF EXISTS Session_price_history CASCADE
;

DROP TABLE IF EXISTS Session CASCADE
;

DROP TABLE IF EXISTS Room_name_history CASCADE
;

DROP TABLE IF EXISTS Room CASCADE
;

DROP TABLE IF EXISTS rating_type CASCADE
;

DROP TABLE IF EXISTS Movie_rating_history CASCADE
;

DROP TABLE IF EXISTS Movie CASCADE
;

DROP TABLE IF EXISTS Genre_type CASCADE
;

DROP TABLE IF EXISTS Cinema CASCADE
;

/* Create Tables */

CREATE TABLE Showing_state
(
	showing_state_id integer NOT NULL,
	name varchar(50)	 NOT NULL
)
;

CREATE TABLE Showing
(
	showing_id serial NOT NULL,
	movie_id integer NOT NULL,
	cinema_id integer NOT NULL,
	showing_state_id integer NOT NULL,
	changed_at timestamp NOT NULL
)
;

CREATE TABLE Session_room
(
	session_room_id serial NOT NULL,
	room_id integer NOT NULL,
	session_id integer NOT NULL
)
;

CREATE TABLE Session_price_history
(
	session_price_history_id serial NOT NULL,
	session_id integer NOT NULL,
	price double precision NOT NULL,
	changed_at timestamp NOT NULL
)
;

CREATE TABLE Session
(
	session_id serial NOT NULL,
	movie_id integer NOT NULL,
	time timestamp NOT NULL,
	price double precision NOT NULL
)
;

CREATE TABLE Room_name_history
(
	room_name_history_id serial NOT NULL,
	name varchar(50)	 NOT NULL,
	room_id integer NOT NULL,
	changed_at timestamp NOT NULL
)
;

CREATE TABLE Room
(
	room_id serial NOT NULL,
	name varchar(50)	 NOT NULL,
	num_of_seats integer NOT NULL,
	cinema_id integer NOT NULL
)
;

CREATE TABLE rating_type
(
	rating_type_id integer NOT NULL,
	name varchar(50)	 NOT NULL
)
;

CREATE TABLE Movie_rating_history
(
	movie_rating_history_id serial NOT NULL,
	movie_id integer NOT NULL,
	rating_type_id integer NOT NULL,
	changed_at timestamp NOT NULL
)
;

CREATE TABLE Movie
(
	movie_id serial NOT NULL,
	name varchar(50)	 NOT NULL,
	author varchar(50)	 NOT NULL,
	genre_type_id integer NOT NULL,
	rating_type_id integer NOT NULL
)
;

CREATE TABLE Genre_type
(
	genre_type_id integer NOT NULL,
	name varchar(50)	 NOT NULL
)
;

CREATE TABLE Cinema
(
	cinema_id serial NOT NULL,
	name varchar(50)	 NOT NULL,
	address varchar(50)	 NOT NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE Showing_state ADD CONSTRAINT PK_Showing_state
	PRIMARY KEY (showing_state_id)
;

ALTER TABLE Showing ADD CONSTRAINT PK_Showing
	PRIMARY KEY (showing_id)
;

ALTER TABLE Session_room ADD CONSTRAINT PK_Session_room
	PRIMARY KEY (session_room_id)
;

ALTER TABLE Session_price_history ADD CONSTRAINT PK_Session_price_history
	PRIMARY KEY (session_price_history_id)
;

ALTER TABLE Session ADD CONSTRAINT PK_Session
	PRIMARY KEY (session_id)
;

ALTER TABLE Room_name_history ADD CONSTRAINT PK_Room_name_history
	PRIMARY KEY (room_name_history_id)
;

ALTER TABLE Room ADD CONSTRAINT PK_Room
	PRIMARY KEY (room_id)
;

ALTER TABLE rating_type ADD CONSTRAINT PK_rating_type
	PRIMARY KEY (rating_type_id)
;

ALTER TABLE Movie_rating_history ADD CONSTRAINT PK_Movie_rating_history
	PRIMARY KEY (movie_rating_history_id)
;

ALTER TABLE Movie ADD CONSTRAINT PK_Movie
	PRIMARY KEY (movie_id)
;

ALTER TABLE Genre_type ADD CONSTRAINT PK_Genre_type
	PRIMARY KEY (genre_type_id)
;

ALTER TABLE Cinema ADD CONSTRAINT PK_Cinema
	PRIMARY KEY (cinema_id)
;

/* Create Foreign Key Constraints */

ALTER TABLE Showing ADD CONSTRAINT FK_Showing_Cinema
	FOREIGN KEY (cinema_id) REFERENCES Cinema (cinema_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Showing ADD CONSTRAINT FK_Showing_Movie
	FOREIGN KEY (movie_id) REFERENCES Movie (movie_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Showing ADD CONSTRAINT FK_Showing_Showing_state
	FOREIGN KEY (showing_state_id) REFERENCES Showing_state (showing_state_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Session_room ADD CONSTRAINT FK_Session_room_Room
	FOREIGN KEY (room_id) REFERENCES Room (room_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Session_room ADD CONSTRAINT FK_Session_room_Session
	FOREIGN KEY (session_id) REFERENCES Session (session_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Session_price_history ADD CONSTRAINT FK_Session_price_history_Session
	FOREIGN KEY (session_id) REFERENCES Session (session_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Session ADD CONSTRAINT FK_Session_Movie
	FOREIGN KEY (movie_id) REFERENCES Movie (movie_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Room_name_history ADD CONSTRAINT FK_Room_name_history_Room
	FOREIGN KEY (room_id) REFERENCES Room (room_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Room ADD CONSTRAINT FK_Room_Cinema
	FOREIGN KEY (cinema_id) REFERENCES Cinema (cinema_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Movie_rating_history ADD CONSTRAINT FK_Movie_rating_history_Movie
	FOREIGN KEY (movie_id) REFERENCES Movie (movie_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Movie_rating_history ADD CONSTRAINT FK_Movie_rating_history_rating_type
	FOREIGN KEY (rating_type_id) REFERENCES rating_type (rating_type_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Movie ADD CONSTRAINT FK_Movie_Genre_type
	FOREIGN KEY (genre_type_id) REFERENCES Genre_type (genre_type_id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Movie ADD CONSTRAINT FK_Movie_rating_type
	FOREIGN KEY (rating_type_id) REFERENCES rating_type (rating_type_id) ON DELETE No Action ON UPDATE No Action
;
